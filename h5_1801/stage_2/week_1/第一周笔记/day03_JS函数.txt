一、函数
    1、JS函数
        （1）概念：当它被调用时执行的可重复使用的代码块。
        （2）函数的定义：
            [1]具名函数
                1>声明式
                2>赋值式
                3>构造函数（不用）
            [2]匿名函数
            [3]代码执行
                1>预存操作：把声明提前保存到内存中。
                    *声明提前（会出现undefined）
                2>顺序执行：逐行执行代码。
        （3）函数的功能：
            [1]使程序变得更简短而清晰
            [2]有利于程序维护
            [3]可以提高程序开发的效率
            [4]提高了代码的复用性。
        （4）函数的执行：
            [1]手动执行（主动）
            [2]事件驱动（被动）
            [3]匿名函数的调用
                1>整体包括起来：;(function(){});
        （5）常用事件：
            [1]ondbclick;--鼠标双击事件
            [2]onchage;--鼠标改变事件
            [3]oninput;--表单输入框实时获取值事件
         (6)函数的使用：
            [1]当相同
    2、函数的分类
        （1）内置函数（系统函数、官方函数）
            [1]alert(); parseInt(); document.write();
        （2）自定义函数
            [1]用户自己封装的所需要的代码块。
            [2]函数名 = 标识符（必须见名知意）
    3、函数作用域-变量的使用范围
        （1）全局作用域：
            [1]（全局变量）定义在函数外的变量，使用范围比较大。
        （2）局部作用域：
            [1]（局部变量）定义在函数内部的变量
         (3)变量访问规则：
            [1]遵循就近原则从内往外逐个查找：沿着作用域链，直到全局作用域还没找到，则报not difine。
        （4）声明提前：
            [1]会在内存提前保存声明-显示undefined。
    4、函数的参数
       【注:】：函数需要被调用才会执行里面的语句。
            [1]无参函数:
                function 函数名(){
                    函数体;
                }
            [2]有参函数:
                function 函数名(形参...){
                    函数体;
                }
            [3]函数的调用需要实参给形参进行赋值   
            [4]参数：写在括号的变量  
                1>形参：定义函数时的参数（定义形参）
                    --局部变量：在内部声明变量
                2>实参：执行函数时的参数 （调用实参）
    5、函数返回值
        (1)要想在外部获取到函数内运行的结果，可以通过[return]语句跟后面的要返回的值来实现返回值。
       （2）return 后面所跟表达式的值，就是当前函数调用的值。
       （3）函数执行到return语句以后，就执行结束了，return后面其他的语句不会执行。
       （4）如果return后有值就会返回到函数执行的位置，如果return后没值或者没有return就会默认反回undefined（声明未赋值）。
       （5）表达式
            [1]表达式值
            [2]表达式的功能
       （6）函数，分析函数
            [1]函数值（return后面表达式的值）
            [2]函数功能（函数名）
       （7）封装函数
            [1]使用范围
            [2]维护难度
            [3]扩展灵活性
    6、函数修改内联css
        (1)js的元素.style.css(驼峰法)= '';
        (2)BOM跳转：location.href = "";
    7、函数数组-arguments
         (1)函数内部隐藏的对象，保存着实参的信息。
        （2）arguments.length();-保存实参的长度。
        （3）数组：一系列数据的集合
        （4）访问arguments的里面的数据，需要通过索引进行访问：从0开始到length-1；
        （5）在每一个函数内，都有一个内置的数组，是一个变量叫做argument。
        （6）argument可以存储当前函数传入的所有参数，而且是通过传参的顺序进行排列的。
         (7)下标可以配合循环进行求值
            [1]参数求和
                var sum = 0;
                for(var i=0;i<argument.length;i++){
                    sum = sum+argument[i];
                }
    8、函数中的this
        (1)函数中的一个隐藏对象，表示当前的对象，而当前对象是谁，取决于谁调用了这个函数。
            [1]主动执行： this=>window。
            [2]被动执行：this=>当前对象。
   
   
